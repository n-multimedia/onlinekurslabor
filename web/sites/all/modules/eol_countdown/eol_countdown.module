<?php
//drupal EOL is 04.01.2025  23:59:59 US TIME
$eol_cd_timezone_us = 'America/New_York';
define('EOL_ENDTIME_DEFAULT' , "04.01.2025 23:59:59");
$configured_eol_enddate = variable_get('eol_countdown_enddate', EOL_ENDTIME_DEFAULT);
$eol_cd_DateTimeUS =  DateTime::createFromFormat("d.m.Y H:i:s", $configured_eol_enddate, new DateTimeZone($eol_cd_timezone_us));
if (is_object($eol_cd_DateTimeUS)) {
  /**
   * EOL_TIMESTAMP: Timestamp for given EOL in TZ US/NY
   */
  define('EOL_TIMESTAMP', $eol_cd_DateTimeUS->getTimestamp()); //enddate for timer
}
else {
  trigger_error('The given value ' . $configured_eol_enddate . ' for variable eol_countdown_enddate is INVALID', E_USER_ERROR);
}

/**
 * Implements hook_block_info().
 */
function eol_countdown_block_info() {
  $blocks['eol_countdown'] = array(
    // The name that will appear in the block list.
    'info' => t('Drupal 7 EOL Counter'),
    // Default setting.
    'cache' => DRUPAL_CACHE_GLOBAL,
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 */
function eol_countdown_block_configure($delta) {
  $form = array();
  switch ($delta) {
    case 'eol_countdown':
      $form['eol_countdown_description'] = array(
        '#type' => 'markup',
        '#markup' => t('This will show a little countdown until EOL of your page. If you wish, the site will be white-out after that date.')
      );
      $form['eol_countdown_enddate'] = array(
        '#type' => 'textfield',
        '#title' => t('End of support'),
        '#date_format' => 'd.m.Y H:i:s',
        '#date_timezone' => date_default_timezone_get(),
        '#default_value' =>  variable_get('eol_countdown_enddate', EOL_ENDTIME_DEFAULT),#date('d.m.Y H:i:s', strtotime(variable_get('eol_countdown_enddate', EOL_ENDTIME_DEFAULT))),#date(variable_get('eol_countdown_enddate', EOL_ENDTIME_DEFAULT)),
        '#required' => true,
        '#description' => t("On this date (Timezone US/NY) Drupal 7 will be EOL. (Default: @default_endtime)", array("@default_endtime" => variable_get('eol_countdown_eoldate', EOL_ENDTIME_DEFAULT))),
        '#element_validate' => array('_eol_countdown_validate_date')
      );
      $form['eol_countdown_before'] = array(
        '#type' => 'textarea',
        '#title' => t('HTML before counter'),
        '#default_value' => variable_get('eol_countdown_before', ''),
        '#size' => 200,
        '#maxlength' => 500,
      );
      $form['eol_countdown_after'] = array(
        '#type' => 'textfield',
        '#title' => t('HTML after counter'),
        '#default_value' => variable_get('eol_countdown_after', ''),
        '#size' => 100,
        '#maxlength' => 200,
      );
      $form['eol_countdown_theme'] = array(
        '#type' => 'textfield',
        '#title' => t('Theme'),
        '#default_value' => variable_get('eol_countdown_theme', 'flat'),
        '#description' => t('Available') . ': black, flat, white, red. Optionally combined with eol_countdown_small_theme (or implement your own .dsCountDown.ds-THEMENAME class)',
        '#size' => 70,
        '#maxlength' => 100,
      );
      $form['eol_countdown_hide_days_secs'] = array(
        '#type' => 'checkbox',
        '#title' => t('Hide secs/days'),
        '#default_value' => variable_get('eol_countdown_hide_days_secs', true),
        '#description' => t("If there's only one day left, seconds will be shown and days hidden. Otherwise, seconds will be hidden."),
        '#size' => 3,
        '#maxlength' => 30,
      );
      $form['eol_countdown_whiteout'] = array(
        '#type' => 'checkbox',
        '#title' => t('White-Out page after EOL'),
        '#default_value' => variable_get('eol_countdown_whiteout', true),
        '#description' => t('Your site will be white-out as soon as Drupal 7 EOL is reached. WARNING: Neither does this offer protection against hackers nor is this functional if javascript is disabled. You must shutdown your site on your own.'),
      );

      $form['eol_countdown_whiteout_message'] = array(
        '#type' => 'textarea',
        '#title' => t('White-Out message'),
        '#default_value' => variable_get('eol_countdown_whiteout_message', 'This site is permanently offline. It could not be upgraded to Drupal&nbsp;9 in time.'),
        '#description' => t('Message to show on white-out screen.'),
        '#rows' => 3,
        '#cols' => 40,
        '#resizable' => FALSE,
        '#states' => array(
          // Only show this field when the 'eol_countdown_whiteout' checkbox is enabled.
          'visible' => array(
            ':input[name="eol_countdown_whiteout"]' => array(
              'checked' => TRUE,
            ),
          ),
        ),
      );


      break;
  }
  return $form;
}
/**
 * validate the timestamp
 * @param type $form
 * @param type $form_state
 */
function _eol_countdown_validate_date($element, &$form_state) {
  $timeformat = "d.m.Y H:i:s";
  $checksuccessful = false;
  $comparisondate = false;
  $value = $element['#value'];

  $parseddate = DateTime::createFromFormat($timeformat, $value);
  if (is_object($parseddate)) {
    $comparisondate = $parseddate->format($timeformat);
  }


  if ($value != $comparisondate) {
    form_error($element, t('%name is not a valid date in format %format', array(
      '%name' => $element['#title'],
      '%format' => $timeformat
    )));
  }
}

/**
 * Implements hook_block_save().
 */
function eol_countdown_block_save($delta = '', $edit = array()) {
  switch ($delta) {
    case 'eol_countdown':
      foreach (array('eol_countdown_enddate', 'eol_countdown_before', 'eol_countdown_after', 'eol_countdown_theme', 'eol_countdown_hide_days_secs', 'eol_countdown_whiteout', 'eol_countdown_whiteout_message') as $block_option_name) {
        variable_set($block_option_name, $edit[$block_option_name]);
      }
      break;
  }
}

/**
 * implements hook_block_view
 * @param type $delta
 * @return array
 */
function eol_countdown_block_view($delta = '') {
  switch ($delta) {

    case 'eol_countdown':
      $whiteout_message_pure = variable_get('eol_countdown_whiteout_message');
      $replace_line_breaks = array("\n", "\r");
      $whiteout_message = str_replace($replace_line_breaks, "<br />", $whiteout_message_pure);
      $block['subject'] =  t("End of life for !sitename in", array("!sitename"=> variable_get('site_name')));
      $block['content'] = array(
        '#title' => t("End of life for !sitename in", array("!sitename"=> variable_get('site_name'))),
        '#markup' => theme('eol_countdown_block', array(
          'before' => variable_get('eol_countdown_before'),
          'after' => variable_get('eol_countdown_after'),
          'theme' => variable_get('eol_countdown_theme'),
          'hide_days_secs' => variable_get('eol_countdown_hide_days_secs'),
          'timestamp' => EOL_TIMESTAMP,
          'white_out' => variable_get('eol_countdown_whiteout'),
        )),
        '#attached' => array(
          'css' => array(
            drupal_get_path('module', 'eol_countdown') . '/assets/vendor/dscountdown/dscountdown.css',
            drupal_get_path('module', 'eol_countdown') . '/assets/css/eol_countdown.css',
          ),
          'js' => array(
            array(
              'data' => drupal_get_path('module', 'eol_countdown') . '/assets/vendor/dscountdown/dscountdown.min.js',
              'group' => JS_DEFAULT,
              'scope' => 'footer',
            ),
            //settings
            array(
              'data' => array(
                'eol_countdown' => array(
                  'whiteout_message' => $whiteout_message
                ),
              ),
              'type' => 'setting'
            ),
            array(
              'data' => drupal_get_path('module', 'eol_countdown') . '/assets/js/eol_countdown.js',
              'group' => JS_DEFAULT,
              'scope' => 'footer',
            ),
          ),
        ),
      );
      break;
  }
  return $block;
}

/**
 * Implements hook_theme().
 */
function eol_countdown_theme() {
  return array(
    'eol_countdown_block' => array(
      'template' => 'templates/eol_countdown_block', //ignore .tpl.php
    ),
  );
}
