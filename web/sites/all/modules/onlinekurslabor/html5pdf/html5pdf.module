<?php

/**
 * replace by https://www.drupal.org/project/pdf ?????????
 * EDIT: das wird zwar auch für 8.x umgesetzt, aber 
 * javascript not compatible with pdf.js version 2.x
 * pdf.js version 2.x no longer has the global PDFJS object.
 * seit 8monaten unfixed
 * https://www.drupal.org/project/pdf/issues/3047899
 * 
 * 
 * HINT: find new versions of pdf.js here: https://github.com/mozilla/pdf.js/releases
 * and extract contents of e.g. pdfjs-2.2.228-dist.zip\build\  to html5pdf\assets\javascript
 */
/**
 * @file
 * ein modul, das pdfs rendern kann. 
 */

/**
 * Implements hook_page_build(&$page) {
 */
function html5pdf_page_build($page) {
    if ($node = menu_get_object()) {
        // Get the nid
        $nid = $node->nid;
    } else {
        $nid = 'default';
    }

    drupal_add_js(array('html5pdf' => array('json_video_id' => 'cid-' . $nid)), 'setting');
    #drupal_add_js(drupal_get_path('module', 'html5pdf') . '/assets/javascript/pdf.js', array('cache' => FALSE));  
    //add core-js
    drupal_add_js(drupal_get_path('module', 'html5pdf') . '/assets/javascript/html5pdf.js');
    drupal_add_js(drupal_get_path('module', 'html5pdf') . '/assets/javascript/jquery.scrollview.js');


    //add plugin-js
    drupal_add_js(drupal_get_path('module', 'html5pdf') . '/assets/javascript/drupal-html5pdf.js');
    //add plugin-js for controlss
    drupal_add_css(drupal_get_path('module', 'html5pdf') . '/assets/css/main.css');
}


/*
 * the following functions are so that you can select "Display PDF" for a file in display_options
 * see https://www.computerminds.co.uk/articles/creating-new-field-formatters-drupal-7
 */
/**
 * Implements hook_field_formatter_info().
 * "Display" a pdf-file
 * 
 */
function html5pdf_field_formatter_info() {
    return array(
        // the key must be unique, so it's best to prefix with your module's name.
        'html5pdf_pdfviewer' => array(
            // the label is is what is displayed in the select box in the UI.
            'label' => t('Display PDF'),
            // field types is the important bit!! List the field types your formatter is for.
            'field types' => array('file'),
             'settings' => array(
                'css_wrapper_class' => 'html5pdf_standard_wrapper_class',
                'show_file_link' => false
             ),
        ),
    );
}

 

/**
 * Implements hook_field_formatter_settings_summary().
 * shown next to "display" settings of the pdf-field
 */
function html5pdf_field_formatter_settings_summary($field, $instance, $view_mode) {
    $display = $instance['display'][$view_mode];
    $settings = $display['settings'];
    $element = array();
    $summary[] = 'Displays a PDF directly on your website';

    if ($display['type'] == 'html5pdf_pdfviewer') {
        $summary[] = t('CSS wrapper-class is: %text', array('%text' => $settings['css_wrapper_class']));
         $summary[] = t('Show link to file: %text', array('%text' => $settings['show_file_link']? t('Yes') : t('No')));
    }



    return implode('<br />', $summary);
}

/**
 * Implements hook_field_formatter_settings_form().
 * settings form for setting the css-wrapper class
 */
function html5pdf_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
    $display = $instance['display'][$view_mode];
    $settings = $display['settings'];
    $element = array();

    if ($display['type'] == 'html5pdf_pdfviewer') {
        $element['css_wrapper_class'] = array(
            '#type' => 'textfield',
            '#title' => t('CSS wrapper-class'),
            '#description' => t('Name a class which is used in the wrapper. It sould have a width assigned, e.g. 700px.'),
            '#default_value' => $settings['css_wrapper_class'],
            '#required' => TRUE,
        );
         $element['show_file_link'] = array(
            '#type' => 'checkbox',
            '#title' => t('Show link to file'),
            '#description' => t('Below the embedded PDF a link to the file will be shown for convenient download.'),
            '#default_value' => $settings['show_file_link'],
            '#required' => FALSE,
        );
    }
    return $element;
}
 

/**
 * Implements hook_field_formatter_view(). This code just passes straight
 * through to a theme function, MYMODULE_formatter_FORMATTER
 * (e.g. MYMODULE_formatter_MYMODULE_absolute_url).
 */
function html5pdf_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $elements = array();

  foreach ($items as $delta => $item) {
    if (pathinfo($item['filename'], PATHINFO_EXTENSION) != 'pdf') {
      continue;
    }
    //preview in wysiwyg
    if (!empty($item['override']['wysiwyg'])) {
      //achtung: bei WYSIWYG geht nur EIN <html-Element>. Bei mehreren verschluckt er sich - also auch kein <img>+<span>
      if ($display['settings']['show_file_link']) {
        $elements[$delta] = array(
          '#markup' => '<img src="' . base_path() . drupal_get_path('module', 'html5pdf') . '/assets/images/placeholder1small_with_link.png" alt="' . t('Embedded PDF with link to file') . '" />');
      }
      else {
        $elements[$delta] = array(
          '#markup' => '<img src="' . base_path() . drupal_get_path('module', 'html5pdf') . '/assets/images/placeholder1small_without_link.png" alt="' . t('Embedded PDF') . '" />');
      }
    }
    else {#var_dump($display);
      $pdf_viewmode = '';
      //detektiere print-view über url: book/export/html/XYZ
      if (arg(0) === 'book' && arg(1) === 'export' && arg(2) === 'html') {
        $pdf_viewmode = 'print';
      }
      //render file on page
      $elements[$delta] = array(
        '#markup' => theme('html5pdf_formatter_' . $display['type'], array('element' => $item, 'field' => $instance, 'settings' => $display['settings'] + array('view_mode' => $pdf_viewmode))),
      );
    }
  }
  return $elements;
}

#

/**
 * Implements hook_theme().
 */
function html5pdf_theme() {
  return array(
    // The theme function that our formatter uses:
      //@todo rename the formatter -too long!
    'html5pdf_formatter_html5pdf_pdfviewer' => array(
      // Don't forget that all Drupal 7 theme functions have only one argument,
      // so you declare what variables get passed within that argument instead.
      // See http://drupal.org/node/224333#theme_changes
      'arguments' => array('identifier' => NULL, 'pdf_file_url' => null, 'module_path'=> null, 'css_wrapepr_class'=>null, 'show_file_link' => false, 'view_mode' => null),
       'template' => 'templates/html5pdf',
    ),
  );
}

/**
 * my module template_preprocess
 * set variables for .tpl-file
 * @param type $variables
 */
function template_preprocess_html5pdf_formatter_html5pdf_pdfviewer(&$variables) {   
  $variables['identifier']  = $variables['element']['fid'];;
  $variables['pdf_file_url']  = file_create_url($variables['element']['uri']);
  $variables['module_path']  =  base_path().drupal_get_path('module', 'html5pdf');
  $variables['view_mode'] = $variables['settings']['view_mode'];
  if(!empty($variables['field']))
  {
    $variables['css_wrapepr_class'] = $variables['field']['display']['default']['settings']['css_wrapper_class'];
    $variables['show_file_link'] = $variables['field']['display']['default']['settings']['show_file_link'];
  }
  else
  {
    $variables['css_wrapepr_class'] = $variables['settings']['css_wrapper_class'];
    $variables['show_file_link'] = $variables['settings']['show_file_link'];
  }
 
}
  
