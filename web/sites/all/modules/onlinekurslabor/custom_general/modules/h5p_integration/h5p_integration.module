<?php

/**
 * Implements hook_wysiwyg_plugin
 * @param type $editor
 * @param type $version
 * @return type
 */
function h5p_integration_wysiwyg_plugin($editor, $version) {
#return false;
  //do not show H5P Plugin in Projects section
  if(section_projects_get_active_project()){
    return;
  }

  //_linkit_add_settings($editor);
  switch ($editor) {
    case 'ckeditor':
      /*wichtiger hinweis. beim entwickeln solcher plugins sind IDs extrem wichtig!
       Also Buttons in PHP und JS gleich benennen und auch der Modulname (hier der array-key)
       sollte wieder auftauchen.
       Ansonsten kommt es zu einem strangen is null js fehler*/
      return array(
        'h5p_integration' => array(
          'path' => drupal_get_path('module', 'h5p_integration') . '/wysiwyg_plugin',
          'buttons' => array(
            'h5p_button' => t('H5P Interactive Content'),
          ),
          'load' => TRUE,
        ),
      );
  }
}
 
/**
 *  FILTER
 */

/**
 * Implements hook_filter_info().
 *
 */
function h5p_integration_filter_info() {
  $filters['filter_content_h5p'] = array(
    'title' => t('Content - H5 Filter'),
    'description' => t('Every [h5p](node_id)[/h5p] pattern is being replaced by its content.'),
    'process callback' => '_h5p_integration_filter_h5p_process',
    'tips callback' => '_h5p_integration_filter_h5p_tips',
    'cache' => FALSE,
  );
  return $filters;
}

/**
 * Content - h5p Filter  process callback.
 *
 * The actual filtering is performed here. The supplied text should be returned,
 * once any necessary substitutions have taken place. The example just replaces
 * foo with our custom defined string in the settings page.
 */
function _h5p_integration_filter_h5p_process($text, $filter, $format) {
  //$replacement = isset($filter->settings['filter_example_foo']) ? $filter->settings['filter_example_foo'] : 'bar';
  //return str_replace('foo', $replacement, $text);
  $regex = '#\[h5p\]([0-9]+)(:*.*?)\[\/h5p\]#s';

  return preg_replace_callback($regex, '_h5p_integration_h5p_replacements', $text);
}

function _h5p_integration_h5p_replacements($matches) {
  //preg_match($regex, $text, $matches);
  //$match = $matches[0];
  $text = "";

  if (!empty($matches) && count($matches) > 1) {

    $nid = $matches[1];
    $node = node_load($nid);

    //visibility checks
    //will the content will be visible
    $arg0 = arg(0);
    $arg1 = arg(1);
    $arg2 = arg(2);
    $arg3 = arg(3);
    $course_context = $arg0 == 'course' && $arg1 == 'text' && is_numeric($arg3);
    $domain_context = $arg0 == 'domain' && $arg1 == 'text' && is_numeric($arg2);
    if($course_context || $domain_context){
      if($arg0 == 'course' ){
        $content_node = node_load($arg3);
      }else if($arg0 == 'domain') {
        $content_node = node_load($arg2);
      }
      //aktuell besuchter lehrtext: entweder group ref oder book-bid (bei der ersten seite v.a.)
       $current_domain_nid =   @$content_node->og_group_ref[LANGUAGE_NONE][0]['target_id']?: $content_node->book['bid'];
      
      if($current_domain_nid) {
         //check if h5p content is visible in active domain
          if(!og_is_member('node', $current_domain_nid, 'node', $node)) {
                //check if user may edit h5p and domain content node
                if(node_access('update', $node) && node_access('update', $content_node)) {
                    drupal_set_message("Es wurde ein H5P Inhalt eingebettet, der nicht für dieses Thema freigeschaltet ist. " . l("Bitte schalten Sie diesen Inhalt hier frei.", 'domain/edit/'.$node->nid), 'warning');
                  }
                else {
                    drupal_set_message("Es wurde ein H5P Inhalt eingebettet, der nicht für dieses Thema freigeschaltet ist! Dieser ist für Kursteilnehmer nicht sichtbar. ", 'error');
                  }
        }
      }

    }


    if ($node != FALSE && node_access('view', $node) && $node->status) {

      //bei embed auch den view-mode anpassen
      $node_view = node_view($node, 'embed', NULL);

      //28.05.2013 - 12:22 - SN hack, title must be unset at another place (template)
      if (isset($node_view['#node']->title)) {
        $node_view['#node']->title = "";
      }
      //dpm($node_view);
      $node_output = drupal_render($node_view);
      //$text = preg_replace($regex, $node_output, $text);
      $text = '<div class="embeded_h5p">' . $node_output . '</div>';
    }
  }

  return $text;
}

/**
 * Filter tips callback for foo filter.
 *
 * The tips callback allows filters to provide help text to users during the
 * content editing process. Short tips are provided on the content editing
 * screen, while long tips are provided on a separate linked page. Short tips
 * are optional, but long tips are highly recommended.
 */
function _h5p_integration_filter_h5p_tips($filter, $format, $long = FALSE) {

  return t('Every [h5p](node_id)[/h5p] pattern is being replaced by its content.');
}
