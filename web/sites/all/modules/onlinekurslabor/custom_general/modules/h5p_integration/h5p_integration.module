<?php

/**
 * Implements hook_wysiwyg_plugin
 * @param type $editor
 * @param type $version
 * @return type
 */
function h5p_integration_wysiwyg_plugin($editor, $version) {

  //do not show H5P Plugin in Projects section
  if(section_projects_get_active_project()){
    return;
  }

  //_linkit_add_settings($editor);
  switch ($editor) {
    case 'ckeditor':
      return array(
        'h5p_integration_plugin' => array(
          'path' => drupal_get_path('module', 'h5p_integration') . '/wysiwyg_plugin',
          'buttons' => array(
            'h5p_button' => t('H5P Interactive Content'),
          ),
          'load' => TRUE,
        ),
      );
      break;
  }
}
 /**
 * Implements hook_menu
 *
 * @return array
 */
function h5p_integration_menu() {

  $items = array();

  $items['admin/h5p_interactive_content_dashbord'] = array(
    'title' => 'Interactive Content',
    'description' => 'Interactive Content Auswahl',
    'page callback' => '_h5p_integration_dashboard',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'page arguments' => array(2),
      //'theme callback' => '_linkit_dashboard_theme',
  );
  $items['h5p_integration/item/autocomplete'] = array(
    'title' => 'Content autocomplete response function',
    'page callback' => '_h5p_integration_autocomplete',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}


function _h5p_integration_autocomplete($search = NULL) {

  $search = $_GET['s'];
  $enabled_plugins = linkit_get_profile_plugins();

  // Absolute URL
  if ($result = _linkit_result_from_url($search, $enabled_plugins)) {
    $results = array($result);
  }
  elseif (!$results = _h5p_integration_h5p_autocomplete_search($search, $enabled_plugins)) {
    $results = array(array(
        'title' => t('No results'),
        'addClass' => 'status-notice',
        'disabled' => TRUE,
    ));
  }
  drupal_json_output($results);
  drupal_exit();
}

/**
 * Perform internal autocomplete search.
 *
 * @param $search_string
 *   The search string.
 * @return $results
 *   An array with the result objects.
 */
function _h5p_integration_h5p_autocomplete_search($search_string, $enabled_plugins) {
  $matches = array();
  if ($search_string) {
    $profile = linkit_profile_load("h5p_interactive_content");

    foreach ($enabled_plugins as $plugin) {
      // Get an instance of the handler for this plugin.
      $handler = linkit_get_plugin_handler($plugin, $profile);
      // If the handler is broken, just continue.
      if ($handler->broken()) {
        continue;
      }
      // Add the search string.
      $handler->setSearchString($search_string);
      // Call the plugin search metod.
      $results = $handler->autocomplete_callback();
      // Merge the results.
      $matches = array_merge($matches, $results);
    }
    // Special for link to frontpage.
    if (strpos($search_string, 'front') !== FALSE) {
      $results = array(
        array(
          'title' => t('Frontpage'),
          'description' => 'The frontpage for this site.',
          'path' => url('<front>'),
          'group' => t('System'),
        )
      );
      $matches = array_merge($matches, $results);
    }
  }
  if (!empty($matches)) {
    return $matches;
  }
  return FALSE;
}

function _h5p_integration_dashboard() {
  /**
   * Creates the dashboard.
   */
  $form = drupal_get_form('_h5p_integration_dashboard_form');
  print drupal_render($form);
  drupal_exit();
}

/**
 * Implements hook_form().
 */
function _h5p_integration_dashboard_form($form, &$form_state) {
  $profile = linkit_profile_load("h5p_interactive_content");

  if (empty($profile)) {
      //todo !
    drupal_set_message(t('You need a linkit profile named <em>h5p_interactive_content</em> to continue!'), 'error');
    return $form;
  }

  $form['h5p_search'] = array(
//'#prefix' => '<div>' . l('Aufgabe hinzufügen', 'node/add/biblio', array('attributes' => array('target'=>'_blank'))). '</div>',
    '#type' => 'textfield',
    //'#title' => t('Search Tasks'),
    //'#description' => t('Start typing to find a tasks entry. Use the arrow keys to navigate.'),
    '#maxlength' => 255,
    '#size' => 60,
    '#default_value' => '',
    '#weight' => -10,
    '#attributes' => array('placeholder' => 'Suche - Interactive Content Titel'),
  );

  $form['h5p_tag'] = array(
    '#type' => 'textfield',
    //'#title' => t('Task-ID (nid)'),
    '#required' => TRUE,
    '#maxlength' => NULL,
    '#size' => 60,
    '#default_value' => '',
    '#weight' => -1,
    '#attributes' => array('placeholder' => 'H5P ID (nid)'),
  );




  $form['h5p_insert'] = array(
    '#type' => 'submit',
    '#value' => 'H5P-Content einfügen',
    '#suffix' => '<a id="h5p-cancel" class="btn" href="#">' . t('Cancel') . '</a>',
    '#weight' => 100,
    '#attributes' => array('class' => array('btn', 'btn-primary')),
  );



  return $form;
}

/**
 *  FILTER
 */

/**
 * Implements hook_filter_info().
 *
 */
function h5p_integration_filter_info() {
  $filters['filter_content_h5p'] = array(
    'title' => t('Content - H5 Filter'),
    'description' => t('Every [h5p](node_id)[/h5p] pattern is being replaced by its content.'),
    'process callback' => '_h5p_integration_filter_h5p_process',
    'tips callback' => '_h5p_integration_filter_h5p_tips',
    'cache' => FALSE,
  );
  return $filters;
}

/**
 * Content - h5p Filter  process callback.
 *
 * The actual filtering is performed here. The supplied text should be returned,
 * once any necessary substitutions have taken place. The example just replaces
 * foo with our custom defined string in the settings page.
 */
function _h5p_integration_filter_h5p_process($text, $filter, $format) {
  //$replacement = isset($filter->settings['filter_example_foo']) ? $filter->settings['filter_example_foo'] : 'bar';
  //return str_replace('foo', $replacement, $text);
  $regex = '#\[h5p\]([0-9]+)(:*.*?)\[\/h5p\]#s';

  return preg_replace_callback($regex, '_h5p_integration_h5p_replacements', $text);
}

function _h5p_integration_h5p_replacements($matches) {
  //preg_match($regex, $text, $matches);
  //$match = $matches[0];
  $text = "";

  if (!empty($matches) && count($matches) > 1) {

    $nid = $matches[1];
    $node = node_load($nid);

    //visibility checks
    //will the content will be visible
    $arg0 = arg(0);
    $arg1 = arg(1);
    $arg2 = arg(2);
    $arg3 = arg(3);
    $course_context = $arg0 == 'course' && $arg1 == 'text' && is_numeric($arg3);
    $domain_context = $arg0 == 'domain' && $arg1 == 'text' && is_numeric($arg2);
    if($course_context || $domain_context){
      if($arg0 == 'course' ){
        $content_node = node_load($arg3);
      }else if($arg0 == 'domain') {
        $content_node = node_load($arg2);
      }

      //get content domain
      if(!empty($content_node->og_group_ref[LANGUAGE_NONE][0]['target_id'])) {
        $domain_nid = $content_node->og_group_ref[LANGUAGE_NONE][0]['target_id'];
        //check if user may edit h5p and domain content node
        if(node_access('update', $node) && node_access('update', $content_node)) {
          //check if h5p content is visible in active domain
          if(!og_is_member('node', $domain_nid, 'node', $node)) {
            drupal_set_message("Es wurde ein H5P Inhalt eingebettet, der nicht für dieses Thema freigeschaltet ist. " . l("Bitte schalten Sie diesen Inhalt hier frei.", 'domain/edit/'.$node->nid), 'warning');
          }
        }
      }

    }


    if ($node != FALSE && node_access('view', $node) && $node->status) {

      //bei embed auch den view-mode anpassen
      $node_view = node_view($node, 'embed', NULL);

      //28.05.2013 - 12:22 - SN hack, title must be unset at another place (template)
      if (isset($node_view['#node']->title)) {
        $node_view['#node']->title = "";
      }
      //dpm($node_view);
      $node_output = drupal_render($node_view);
      //$text = preg_replace($regex, $node_output, $text);
      $text = '<div class="embeded_h5p">' . $node_output . '</div>';
    }
  }

  return $text;
}

/**
 * Filter tips callback for foo filter.
 *
 * The tips callback allows filters to provide help text to users during the
 * content editing process. Short tips are provided on the content editing
 * screen, while long tips are provided on a separate linked page. Short tips
 * are optional, but long tips are highly recommended.
 */
function _h5p_integration_filter_h5p_tips($filter, $format, $long = FALSE) {

  return t('Every [h5p](node_id)[/h5p] pattern is being replaced by its content.');
}
