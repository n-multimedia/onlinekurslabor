<?php

/**
 * hook_page_build
 * @param type $page
 */
function section_home_page_build(&$page) {
 if( drupal_is_front_page() )
    {
    drupal_add_css(drupal_get_path('module', 'section_home') . '/assets/css/section_home.css');
    drupal_add_js(drupal_get_path('module', 'section_home') . '/assets/js/section_home.js');
    }
}

/**
 * Nach dem Login wird man auf die Startseite redirected
 * es sei dem, man hat einen destination-parameter oder per mail resetted pw
 * @param type $edit
 * @param type $account
 */
function section_home_user_login(&$edit, $account) {
    
    if (!$_GET['destination'] && ! strstr ($_SERVER['REQUEST_URI'], '/user/reset'))
        $_GET['destination'] = '/';
}


/**
 * Die Stream-Ansicht
 * @return String $html
 */
function _section_home_getRenderedStream() {

    $view = _section_home_getView('nm_stream','panel_pane_1');
     
   # $view->set_title( t('Streamrecords'));
    return _section_home_renderView($view, 'panel_pane_1');
    }
    
/**
 * Die Activity-Ansicht
 * @return String $html
 */    
function _section_home_getRenderedActivity() {

    $view = _section_home_getView('nm_activity_stream');
 
   # $view->set_title(t('Activity'));
    return _section_home_renderView($view, null, true);
}

/**
 * Meine Lehrtexte
 * @return String $html
 */    
function _section_home_getRenderedDomains() {
    global $user;
    $view = _section_home_getView('courses_user_domains','nid_only');
    $view->set_title('Meine Lehrtexte');
 
    //gibts nur fuer autoren+
    if(drupal_valid_path('domains'))
    {
        $html = _section_home_get_rendered_tiitle($view->get_title(), array(_section_home_getMoreTag('domains','add')));
        return $html._section_home_renderView($view, 'nid_only', true)._section_home_getMoreTag('domains','all');
    }
    else
    {
        return "";
    }
}


/**
 * Die Meine_kurse-Ansicht
 * @return String $html
 */    
function _section_home_getRenderedCourses() {
  
    $view = _section_home_getView('courses_kurse_bersicht', 'my_courses_small');
    $html = _section_home_get_rendered_tiitle($view->get_title(), array(_section_home_get_search_toggle_tag('views-exposed-form-courses-kurse-bersicht-my-courses-small'),_section_home_getMoreTag('courses', 'add')));
    $html .=  _section_home_renderView($view, 'my_courses_small') . _section_home_getMoreTag('courses', 'all');
    return $html;
}


/**
 * Für vordefinierte Bereiche kann man einfach einen more-Tag  erhalten. Dieser verlinkt bspw. auf "alle Kurse"
 * @param String $variant
 * @param String $type: "all" | "add" (link auf alle bzw erstellen (sofern verfügbar)
 * @return String html-Link | "" if not available
 */
function _section_home_getMoreTag($variant, $type) {
    
    $str_add_content = '';
    $options = array(
        'messages' => array('path' => 'messages', 'title' => t('All messages'), 'title_create' => t('Write message'), 'path_create' => '/messages/new'),
        'courses' => array('path' => 'courses', 'title' => t('Other courses'), 'type' => NM_COURSE, 'title_create' => t('Create course'), 'path_create' => (@node_access('create', NM_COURSE) ? '/node/add/' .  str_replace('_', '-',NM_COURSE) : '')),
        'domains' => array('path' => 'domains', 'title' => t('All educational texts'), 'type' => NM_CONTENT_DOMAIN, 'title_create' => t('Create educational text'), 'path_create' => (@node_access('create', NM_CONTENT_DOMAIN) ? '/node/add/' . str_replace('_', '-',NM_CONTENT_DOMAIN)  : ''))
    );
    $curr_variant = $options[$variant];

    if ($type == "all") {
        //checke access perms auf path
        $path_alias = drupal_get_path_alias($curr_variant['path']);
        if (!drupal_valid_path($path_alias))
            return $str_add_content;
        $html_all_item = '<span class="glyphicon glyphicon-option-horizontal"></span>';
        $str_all_content = l($html_all_item, $path_alias, array('html' => true, 'attributes' => array('title' => $curr_variant['title'])));

        return '<center>' . $str_all_content . '</center>';
    }
    if ($type == 'add' && $curr_variant['path_create']) {
        $html_add_item = '<span class="glyphicon glyphicon-plus"></span>';
        $str_add_content = l($html_add_item, $curr_variant['path_create'], array('html' => true, 'attributes' => array('title' => $curr_variant['title_create'])));
        return  $str_add_content ;
    }
}

/**
 * die xyz-Suchen-Form wird normal ausgeblendet. Hier wird ein Button generiert,
 * um sie wieder anzuzeigen
 * $identifier : html-identifier der Form ohne #-Symbol
 */
function _section_home_get_search_toggle_tag($identifier)
{
    return '<a href=#   data-toggle="collapse" data-target="#'.$identifier.'" title="'.t('Search course').'"><span class="glyphicon glyphicon-search"></span></a>';
}

/**
 * packt die kleinen Symbole wie "+" in einen rechts-floatenden container
 * @param String $html_content
 * @return String html
 */
function _section_home_iconcontainer_right($html_content)
{
    return '<div class="home_icon_container_right">' . $html_content . '</div>';
}
/**
 * Die Ungelesene-Nachrichten-Ansicht
 * @return String $html
 * 
 * ueberfluessig, view wird direkt in der region geladen
function _section_home_getRenderedMessages() {
 
    $view = _section_home_getView('messages_list','messages_unread'); 
  #  $view->set_title(t('Unread messages'));
     $view->set_title($view->get_title()._section_home_getMoreTag('courses','add'));
  
    return _section_home_renderView($view, 'messages_unread');
   
} 
 */
/**
 * Implements hook_panels_pane_content_alter
 * 
 * Das ist so //der letzte// einer der letzten Hooks, der aufgerufen wird, 
 * bevor ein panel geschrieben wird. 
 * Wird benutzt, um dem View "Neue Nachrichten" ein +-Symbol und "alle-Nachrichten"-Symbol hinzuzufügen ohne
 * dabei mit der Tab-Logik zu interferen.
 * Außerdem wird bei zwei Panes der Title entfernt, da überflüssig
 */
function section_home_panels_pane_content_alter($content, $pane, $args, $contexts) {

    if( drupal_is_front_page() )
    {
        // Don't display titles on some panes.
        if (in_array($content->title, array(t('Activity'), t('My events')))) {
            $content->title = null;
        }

        if (@$content->delta === 'messages_list-messages_unread') {

            $content->content['#markup'] = _section_home_get_rendered_tiitle($content->title, array(_section_home_getMoreTag('messages', 'add'))) . $content->content['#markup'];
            $content->title = null;
            $content->content['#markup'] .= _section_home_getMoreTag('messages', 'all');
            # dpm($content);
        }
    }
}




       

/**
 * liefert ein View-Object mit übergebenem Namen und führt notwendige Operatioen fuer Funktionsweise aus
 * @param String  $view_name Name des Views (machine-name)
 * @param String $display_id Name der Panel Pane (machine-name)
 * @return View $view
 */
function _section_home_getView($view_name, $display_id = null)
{        $view = views_get_view($view_name,true);
        if ($display_id) {
        //die panel-variante setzen
        $view->set_display($display_id);
        //ausfuehren des views
        $view->execute($display_id);
        //preview enables ajax-next-pager!!
        $view->preview($display_id);
    } 
    return $view;
}
 
 
/**
 * Rendert einen View zu HTML
 * @param View $view der View
 * @param type $display_id Name der Panel Pane (machine-name)
 * @param type $override_count Bei manchen Views funktioniert die Abfrage der Anzahl der Einträge nicht. Kann hier übersprungen werden
 * @return String $html
 */
function _section_home_renderView(View $view, $display_id = null, $override_count = false) {

    $html = "";# "<h3>" . $view->get_title() . "</h3>";
    if (!$override_count)
        $html .= $view->total_rows ? $view->render($display_id) : "<i>&nbsp;&nbsp;- keine - </i><br>";
    else
        $html .= $view->render($display_id);
    return $html;
}

/**
 * Rendered einen Titel und Icons in einen Container mit den Icons
 * @param String $title
 * @param array $icons
 * @return String html
 */
function _section_home_get_rendered_tiitle($title, array $icons)
{     $icon_str = _section_home_iconcontainer_right(implode('&nbsp;', $icons));
      $html =   
      <<<EOF
    <div class="home_title_container">
    <h3 class="home_title">$title</h3>
     $icon_str
    </div>
EOF;
      return $html;
}

