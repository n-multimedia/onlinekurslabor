<?php

/**
 * implements hook_page_build(&$page) 
 * @param type $page
 */
function section_profile_page_build(&$page) {

    drupal_add_css(drupal_get_path('module', 'section_profile') . '/assets/css/profile.css');
}

/**
 * get remdered Header (img, Name, actions) for a profile
 * @param type $uid
 * @return type
 */
function _section_profile_getProfileHeader($uid) {
    return theme('profile_header');
}


/**
 * Implements hook_theme().
 */
function section_profile_theme($existing, $type, $theme, $path) {
    return array(
        'profile_header' => array(
            'template' => 'templates/profile-header',
        ),
        'profile_details' => array(
            'template' => 'templates/profile-details',
        ),
    );
}

/**
 * Get a  button for editing profile or "" if no access
 * @param type $user_id of affected user
 * @return type
 */
function _section_profile_get_profile_edit_btn($user_id) {
    //pre + suffix
    $useer_edit_button = '<button class="btn btn-default edit-profile"><i class="glyphicon glyphicon-pencil"></i> ' . t('Edit profile') . '</button>';
    $html_str = "";

    $path = 'user/' . $user_id . '/edit';
    if (drupal_valid_path($path)) {
        $html_str .= l($useer_edit_button, $path, array('attributes' => array(), 'html' => TRUE,));
    }
    return $html_str;
}



/**
 * get Infos about a user stored in profile.
 * @param StdClass $user the affected user
 * @return return array in form title => info-value
 */
function _section_profile_get_profile_data($user) {
    $data = array();
    //nutzerrollen
    $roles = $user->roles;
    $to_remove = array('authenticated user');
    $roles = array_diff($roles, $to_remove);
    $roles_name = count($roles) > 1? 'Rollen':'Rolle';
    $data[$roles_name] = implode($roles, ', ');
    
    $profile = profile2_load_by_user($user, 'master');
    //profildaten
    $birthday_view = field_view_field('profile2', $profile, 'field_birthday', 'short');
    //description
    $data['Über mich'] = field_get_items('profile2',$profile,'field_about_me','short')[0]['safe_value'];
    
    //in der diskussion. Welche Values sollen (für wen?) ausgegeben werden. Bis dahin raus
    if (false) {

        $data['Geburtstag'] = $birthday_view [0]['#markup'];

        $profile_student = profile2_load_by_user($user, 'student');

        //hochschule
        $hs_items = field_get_items('profile2', $profile_student, 'field_hochschule');
        $persons_hss = array();
        foreach ($hs_items as $hs_itm) {
            $persons_hss[] = $hs_itm['taxonomy_term']->name;
        }
        $data['Hochschule'] = implode(", ", $persons_hss);

        $data['Matrikelnummer'] = field_get_items('profile2', $profile_student, 'field_matrikelnummer_varchar')[0]['safe_value'];
        $data['Studienfach'] = field_get_items('profile2', $profile_student, 'field_studienfach')[0]['safe_value'];
    }

    //entferne leere values
    foreach($data as $title => $value)
    {
        if(!trim($value))
            unset($data[$title]);
    }
  
    return $data;
}
