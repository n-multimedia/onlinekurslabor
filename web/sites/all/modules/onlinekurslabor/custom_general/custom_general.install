<?php
/**
 * User: naumenko-multimedia
 * Date: 04.12.2015
 * Time: 15:01
 */

function custom_general_update_3000(){
  $users = entity_load('user');
  foreach ($users as $user_id => $user) {

    _DefaultAvatar_createDefaultAvatarForUser($user->uid);

  }
}

function custom_general_update_3001(){
  variable_set('site_mail', 'noreply@onlinekurslabor.de');
}


/**
 * add additional profile for existing users
 */
function custom_general_update_3002(){
  $users = entity_load('user');
  foreach ($users as $user_id => $account) {
    //student profile
    $profile2 = profile2_load_by_user($account, 'data');

    if(!$profile2) {
      //student profile
      $profile2 = profile2_create(array('type' => 'data'));
      $profile2->setUser($account);
      profile2_save($profile2);
    }
  }
}


/**
 * set standard value
 * courses other features (domain_text = TRUE)
 */
function custom_general_update_3003(){

  $field_instances = field_info_instances('node', NM_COURSE);
  $default_value = $field_instances['field_other_features']['default_value'][0]['value'];

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', NM_COURSE);
  $result = $query->execute();

  foreach ($result['node'] as $course_item) {
    $entity = node_load($course_item->nid);
    $entity->field_other_features[LANGUAGE_NONE][0]['value'] = $default_value;
    //save field data for an entity
    field_attach_update('node', $entity);
  }
}

/**
 * set standard value
 * courses other features (domain_text = TRUE)
 */
function custom_general_update_3004(){

  //delete path alias forum/
  db_delete('url_alias')
    ->condition('source', db_like("forum/") . '%', 'LIKE')
    ->execute();

}

/**
 * Set default semester to "Sonstige"
 */

function custom_general_update_3006() {

  $vocabulary = taxonomy_vocabulary_machine_name_load('semester');
  $term = current(taxonomy_get_term_by_name('Sonstige', 'semester'));

  //create sonstiges term, if it does not exist yet
  if (empty($term)) {
    $term = new stdClass();
    $term->name = "Sonstige";
    $term->vid = $vocabulary->vid;
    taxonomy_term_save($term);
  }

  if($term){
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', NM_COURSE);
    $result = $query->execute();

    foreach ($result['node'] as $course_item) {
      $entity = node_load($course_item->nid);

      if (empty($entity->field_semester[LANGUAGE_NONE][0]['tid'])) {
        $entity->field_semester[LANGUAGE_NONE][0]['tid'] = $term->tid;
      }
      //save field data for an entity
      field_attach_update('node', $entity);

      //set field instance default value
      $field_instance_info = field_info_instance("node", "field_semester", NM_COURSE);
      $field_instance_info['default_value'][0]['tid'] = $term->tid;
      field_update_instance($field_instance_info);
    }
  }
}

/**
 * migrates db-entries from public filesystem 
 * to private filesystem and get rid of old domain
 */
function custom_general_update_3007() {
    $tables_fields = array(
        'field_data_field_generic_task_entry' => 'field_generic_task_entry_second',
        'field_data_field_generic_task_assessment' => 'field_generic_task_assessment_value',
        'field_data_field_generic_solution_entry' => 'field_generic_solution_entry_value',
        'field_data_body' => 'body_value',
        'field_data_comment_body' => ' comment_body_value',
        'field_data_field_chapter_text' => 'field_chapter_text_value',
        //und die alten revisions auch...
        'field_revision_body' => 'body_value',
        'field_revision_field_generic_task_entry' => 'field_generic_task_entry_second',
        'field_revision_field_chapter_text' => 'field_chapter_text_value',
        'field_revision_comment_body' => 'comment_body_value',
        'field_revision_field_generic_solution_entry' => 'field_generic_solution_entry_value',
        'field_revision_field_generic_task_assessment' => 'field_generic_task_assessment_value',
        'field_revision_field_domain_description' => 'field_domain_description_value'
    );
    $pattern_okl = 'onlinekurslabor.imb-uni-augsburg.de';
    $value_okl = 'onlinekurslabor.phil.uni-augsburg.de';
    $pattern_fs = '://onlinekurslabor.phil.uni-augsburg.de/sites/default/files';
    $value_fs = '://onlinekurslabor.phil.uni-augsburg.de/system/files';
    $pattern_fsrelative = '"/sites/default/files';
    $value_fsrelative = '"/system/files';

    foreach ($tables_fields as $table => $field) {
        //alte imb-domain ausmerzen
        db_update($table)
                ->expression($field, 'replace(' . $field . ', :pattern, :value)', array(
                    ':pattern' => $pattern_okl,
                    ':value' => $value_okl
                ))->condition($field, '%' . db_like($pattern_okl) . '%', 'LIKE')
                ->execute();
        //verweise von public auf private
        db_update($table)
                ->expression($field, 'replace(' . $field . ', :pattern, :value)', array(
                    ':pattern' => $pattern_fs,
                    ':value' => $value_fs
                ))->condition($field, '%' . db_like($pattern_fs) . '%', 'LIKE')
                ->execute();
        //verweise von public auf private - version2
        db_update($table)
                ->expression($field, 'replace(' . $field . ', :pattern, :value)', array(
                    ':pattern' => $pattern_fsrelative,
                    ':value' => $value_fsrelative
                ))->condition($field, '%' . db_like($pattern_fsrelative) . '%', 'LIKE')
                ->execute();
    }
}
