<?php
/**
 * User: naumenko-multimedia
 * Date: 04.12.2015
 * Time: 15:01
 */

function custom_general_update_3000(){
  $users = entity_load('user');
  foreach ($users as $user_id => $user) {

    _DefaultAvatar_createDefaultAvatarForUser($user->uid);

  }
}

function custom_general_update_3001(){
  variable_set('site_mail', 'noreply@onlinekurslabor.de');
}


/**
 * add additional profile for existing users
 */
function custom_general_update_3002(){
  $users = entity_load('user');
  foreach ($users as $user_id => $account) {
    //student profile
    $profile2 = profile2_load_by_user($account, 'data');

    if(!$profile2) {
      //student profile
      $profile2 = profile2_create(array('type' => 'data'));
      $profile2->setUser($account);
      profile2_save($profile2);
    }
  }
}


/**
 * set standard value
 * courses other features (domain_text = TRUE)
 */
function custom_general_update_3003(){

  $field_instances = field_info_instances('node', NM_COURSE);
  $default_value = $field_instances['field_other_features']['default_value'][0]['value'];

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node');
  $query->entityCondition('bundle', NM_COURSE);
  $result = $query->execute();

  foreach ($result['node'] as $course_item) {
    $entity = node_load($course_item->nid);
    $entity->field_other_features[LANGUAGE_NONE][0]['value'] = $default_value;
    //save field data for an entity
    field_attach_update('node', $entity);
  }
}

/**
 * set standard value
 * courses other features (domain_text = TRUE)
 */
function custom_general_update_3004(){

  //delete path alias forum/
  db_delete('url_alias')
    ->condition('source', db_like("forum/") . '%', 'LIKE')
    ->execute();

}

/**
 * Set default semester to "Sonstige"
 */

function custom_general_update_3006() {

  $vocabulary = taxonomy_vocabulary_machine_name_load('semester');
  $term = current(taxonomy_get_term_by_name('Sonstige', 'semester'));

  //create sonstiges term, if it does not exist yet
  if (empty($term)) {
    $term = new stdClass();
    $term->name = "Sonstige";
    $term->vid = $vocabulary->vid;
    taxonomy_term_save($term);
  }

  if($term){
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node');
    $query->entityCondition('bundle', NM_COURSE);
    $result = $query->execute();

    foreach ($result['node'] as $course_item) {
      $entity = node_load($course_item->nid);

      if (empty($entity->field_semester[LANGUAGE_NONE][0]['tid'])) {
        $entity->field_semester[LANGUAGE_NONE][0]['tid'] = $term->tid;
      }
      //save field data for an entity
      field_attach_update('node', $entity);

      //set field instance default value
      $field_instance_info = field_info_instance("node", "field_semester", NM_COURSE);
      $field_instance_info['default_value'][0]['tid'] = $term->tid;
      field_update_instance($field_instance_info);
    }
  }
}

/**
 * migrates db-entries from public filesystem
 * to private filesystem and get rid of old domain
 */
function custom_general_update_3007() {
    $tables_fields = array(
        'field_data_field_generic_task_entry' => 'field_generic_task_entry_second',
        'field_data_field_generic_task_assessment' => 'field_generic_task_assessment_value',
        'field_data_field_generic_solution_entry' => 'field_generic_solution_entry_value',
        'field_data_body' => 'body_value',
        'field_data_comment_body' => ' comment_body_value',
        'field_data_field_chapter_text' => 'field_chapter_text_value',
        //und die alten revisions auch...
        'field_revision_body' => 'body_value',
        'field_revision_field_generic_task_entry' => 'field_generic_task_entry_second',
        'field_revision_field_chapter_text' => 'field_chapter_text_value',
        'field_revision_comment_body' => 'comment_body_value',
        'field_revision_field_generic_solution_entry' => 'field_generic_solution_entry_value',
        'field_revision_field_generic_task_assessment' => 'field_generic_task_assessment_value',
        'field_revision_field_domain_description' => 'field_domain_description_value'
    );
    $pattern_okl = 'onlinekurslabor.imb-uni-augsburg.de';
    $value_okl = 'onlinekurslabor.phil.uni-augsburg.de';
    $pattern_fs = '://onlinekurslabor.phil.uni-augsburg.de/sites/default/files';
    $value_fs = '://onlinekurslabor.phil.uni-augsburg.de/system/files';
    $pattern_fsrelative = '"/sites/default/files';
    $value_fsrelative = '"/system/files';

    foreach ($tables_fields as $table => $field) {
        //alte imb-domain ausmerzen
        db_update($table)
                ->expression($field, 'replace(' . $field . ', :pattern, :value)', array(
                    ':pattern' => $pattern_okl,
                    ':value' => $value_okl
                ))->condition($field, '%' . db_like($pattern_okl) . '%', 'LIKE')
                ->execute();
        //verweise von public auf private
        db_update($table)
                ->expression($field, 'replace(' . $field . ', :pattern, :value)', array(
                    ':pattern' => $pattern_fs,
                    ':value' => $value_fs
                ))->condition($field, '%' . db_like($pattern_fs) . '%', 'LIKE')
                ->execute();
        //verweise von public auf private - version2
        db_update($table)
                ->expression($field, 'replace(' . $field . ', :pattern, :value)', array(
                    ':pattern' => $pattern_fsrelative,
                    ':value' => $value_fsrelative
                ))->condition($field, '%' . db_like($pattern_fsrelative) . '%', 'LIKE')
                ->execute();
    }
}

/**
 * legal standard settings
 */
function custom_general_update_9002() {
    variable_set('legal_display', 1);

    //exported using phpmyadmin
    /* `div_dev2`.`legal_conditions` */
    $legal_conditions = array(
        array('tc_id' => '1', 'version' => '1', 'revision' => '1', 'language' => 'de', 'conditions' => '<h2>1. Datenschutzerklärung</h2><p><strong>Allgemeines:</strong></p><p>Auf der Plattform des Onlinekurslabors (nachfolgend als OKL bezeichnet) werden personenbezogene Daten verarbeitet. Dies betrifft vor allem die Authentifizierung (in der Regel mit der OKL-Kennung und Passwort). Die für die Vergabe und Verwaltung der persönlichen OKL-Kennung erforderlichen Daten werden durch das Medienlabor der Universität erhoben und dort zentral gespeichert. Daten werden grundsätzlich nicht an Dritte weitergegeben. Lediglich für nachweislich plattformbezogene Aufgaben können Daten, in einer für die Erledigung dieser Aufgaben erforderlichen Qualität, an berechtigte Personen innerhalb des Medienlabors weitergegeben werden. Eine Weitergabe an Personen außerhalb des Medienlabors ist ausgeschlossen. Die weiter unten angegebenen Aufbewahrungsfristen werden dadurch erreicht, dass die Daten nach Ablauf automatisch überschrieben werden, es sei denn ein Missbrauch der Dienste hat stattgefunden und eine disziplinar-, zivil- oder strafrechtliche Verfolgung ist erforderlich. Bei begründetem Verdacht auf Missbrauch der Dienste können die in verschiedenen Logquellen vorhandenen Daten auch in ihrem zeitlichen Zusammenhang ausgewertet werden, um beispielsweise Erkenntnisse über den gesamten Vorgang oder den Verursacher zu ermitteln. Die gespeicherten Daten werden ausschließlich zu technischen oder statistischen Zwecken ausgewertet, z.B. um Fehler rechtzeitig entdecken und beheben zu können sowie die Funktionalität der Plattform zu optimieren. Plattform-Dienste und -Zugänge: Bei der Nutzung der OKL-Plattform über die Infrastruktur des Medienlabor Servers werden zusätzliche relevante Daten gespeichert, insbesondere:</p><ul><li>Datum, Uhrzeit und Status der Kommunikation</li><li>IP- und/oder MAC-Adressen der Plattformnutzenden</li><li>genutzte Ressource</li><li>bei authentifiziertem Zugriff die genutzte Kennung bzw. Mailadresse</li></ul><p>Im Anschluss einer selbstbestimmten Nutzungsdauer der einzelnen Plattform-User werden alle erfassten Daten mit dem Überschreiben der Sicherungssätze entfernt.<br>Dies geschieht spätestens einen Monat nach der Löschung einer Person.</p><p>Die OKL-Plattform nutzt aus technischen Gründen Cookies, etwa zur Authentifizierung und Sitzungsverfolgung oder zur Sicherstellung notwendiger Funktionen des OKL. Es werden hierbei allerdings weder Personeninformationen hinterlegt noch werden Cookies weitergegeben.</p><p><strong>Teilnehmende der Virtuelle Hochschule Bayern (VHB)</strong><br><br>Sofern Sie das Onlinekurslabor über die VHB nutzen, finden zudem die Datenschutzinformationen (§11 in der Benutzungsordnung unter http://www.vhb.org/vhb/downloads/rechtliches/) der VHB Anwendung.&nbsp;</p><p><strong>Web-Analytics</strong></p><p>Um die Inhaltsstrukturen und Navigationsmechanismen des OKL besser an die Bedürfnisse der Nutzenden anpassen zu können, werden die OKL-Aufrufe protokolliert und analysiert. Dazu wird die Software AWStats&nbsp;(<a href="http://www.awstats.org/" target="_blank">http://www.awstats.org/</a>) verwendet.<br>Die Daten werden ausschließlich auf dem Server des Medienlabors erhoben und gespeichert.</p><p>Bitte beachten Sie, dass diese Datenschutzerklärung nicht für Unterseiten von Fakultäten, Instituten, Lehrstühlen, Zentralen Einrichtungen etc. der Universität Augsburg zutrifft. Bitte informieren Sie sich gegebenenfalls auf diesen Seiten über die jeweiligen Datenschutzerklärungen.</p><p>&nbsp;</p><h2>2. Urheberrecht</h2><p>Durch meine Registrierung im Onlinekurslabor (OKL) sowie die Nutzung dieser Plattform und ihres Angebots erkenne ich an, dass es sich bei den zur Verfügung gestellten Materialien (in Form von Texten, Präsentationen, Audiodateien sowie [Bewegt-]Bildern) um datenschutz- und urheberrechtlich geschützte Inhalte handelt. Ich erkläre mich damit einverstanden, diese Inhalte ausschließlich plattformintern und im Zusammenhang mit Lehrerbildung zu nutzen. Darin eingeschlossen sind:</p><ul><li>Der Verzicht auf eine Weitergabe der persönlichen OKL-Kennungen oder Passwörter an Dritte.</li><li>Das Treffen von Vorkehrungen, damit Daten, die im Rahmen der Plattformtätigkeit erhoben, verarbeitet oder genutzt werden, unbefugten Dritten weder auf den benutzten noch fremden Rechnern oder sonstigen DV-Systemen zugänglich gemacht werden.</li><li>Der Verzicht auf den Download bzw. das Speichern von OKL-Materialien auf stationäre Systeme (unabhängig davon, ob privat oder institutionell).</li></ul><p>Ich bin mir der Tatsache bewusst, dass ich die volle Verantwortung für alle Aktionen, die unter meiner Kennung vorgenommen werden, trage, und zwar auch dann, wenn diese Aktionen durch Dritte vorgenommen werden, denen ich zumindest fahrlässig den Zugang ermöglicht habe.</p><p><u>Achtung</u>: Angesichts von Veränderungen im Urheberschutz und entsprechenden Ansprüchen der VG Wort dürfen keine urheberrechtsgeschützten Texte mehr in den Lehrtexten oder Kursdokumenten der OKL-Plattform hinterlegt und für Teilnehmende zugänglich gemacht werden. Das betrifft Buchauszüge, längere Textpassagen, kurz, alles, was irgendwo mit Copyright erschienen ist – dazu zählen auch eigene Texte, sofern deren Rechte an einen Verlag abgetreten wurden. Weiterhin eingestellt werden dürfen eigene, unveröffentlichte Vorlesungs-/Seminarskripte und Präsentationen (PowerPoint, Keynote, etc.), sofern das nicht die vorangehende Situation betrifft. Nach jetzigem Stand ist die Verwendung einzelner Zitate in Texten/Präsentationen unproblematisch.</p><p>&nbsp;</p><h2>3. Datennetz</h2><p>Im übrigen gelten die Benutzungsrichtlinien des Rechenzentrums für das Netz der Universität Augsburg:<br><a href="https://www.rz.uni-augsburg.de/info/richtlinien/benutzungsrichtlinien/index.html" target="_blank">https://www.rz.uni-augsburg.de/info/richtlinien/benutzungsrichtlinien/index.html</a></p><p>&nbsp;</p>', 'date' => '1523868253', 'extras' => 'a:10:{s:8:"extras-1";s:0:"";s:8:"extras-2";s:0:"";s:8:"extras-3";s:0:"";s:8:"extras-4";s:0:"";s:8:"extras-5";s:0:"";s:8:"extras-6";s:0:"";s:8:"extras-7";s:0:"";s:8:"extras-8";s:0:"";s:8:"extras-9";s:0:"";s:9:"extras-10";s:0:"";}', 'changes' => '', 'format' => 'filtered_html')
    );


    //phpmyadmin gbit array(array()) aus..
    $legal_conditions = $legal_conditions[0];

    db_insert('legal_conditions')
            ->fields(array(
                'version' => $legal_conditions['version'],
                'revision' => $legal_conditions['revision'],
                'language' => $legal_conditions['language'],
                'conditions' => $legal_conditions['conditions'],
                'date' => time(),
                'extras' => $legal_conditions['extras'],
                'changes' => $legal_conditions['changes'],
                'format' => "filtered_html",
            ))
            ->execute();
}


/**
 * create OKL Bot Account
 */
function custom_general_update_9003() {
  $botaccount_edit = array(
    'name' => 'Onlinekurslabor Bot',
    'mail' => NM_OKL_BOT_MAIL,
    'init' => NM_OKL_BOT_MAIL,
    'pass' => md5(random_bytes(41)),
    'status' => 1,
  );
  $botaccount = user_save(NULL, $botaccount_edit);
  if (!$botaccount->uid) {
    trigger_error('BOT Account could not be created!');
  }
}



/**
 * publicize files:
 * - profile pics
 * - default profile pics (robots)
 * - course: preview-image
 */
function custom_general_update_9004() {

  db_query("
update file_managed
set uri = REPLACE(uri, 'private://profile/', 'public://profile/')
WHERE uri LIKE 'private://profile/%'
");
  db_query("
update file_managed
set uri = REPLACE(uri, 'private://avatar_', 'public://profile/avatar_')
WHERE uri LIKE 'private://avatar_%'");

  db_query("
update file_managed
set uri = REPLACE(uri, 'private://courses/', 'public://courses_preview/')
WHERE uri LIKE 'private://courses/%'");

}


/**
 * convert omebed links from http to https
 */
function custom_general_update_9005() {

  //string
  $scheme = serialize('http://youtu.be/*
https://youtu.be/*
http://*.youtube.com/playlist*
https://*.youtube.com/playlist*
http://*.youtube.com/profile*
https://*.youtube.com/profile*
http://*.youtube.com/user/*
https://*.youtube.com/user/*
http://*.youtube.com/v/*
https://*.youtube.com/v/*
http://*.youtube.com/view_play_list*
https://*.youtube.com/view_play_list*
http://*youtube.com/watch*
https://*youtube.com/watch*
http://*.youtube.com/*#*/*
https://*.youtube.com/*#*/*
http://m.youtube.com/index*
https://m.youtube.com/index*
http://m.youtube.com/watch*
https://m.youtube.com/watch*');

  // Using db_query function
  $result = db_query("INSERT INTO {oembed_provider} (pid, name, title, endpoint, scheme)
                      VALUES (:pid, :name, :title, :endpoint, :scheme)", array(
                        ':pid' => 1,
                        ':name' => 'youtube',
                        ':title' => 'YouTube',
                        ':endpoint' => 'https://www.youtube.com/oembed',
                        ':scheme' => $scheme,
                      ));

    db_query("UPDATE IGNORE {file_managed} SET uri = REPLACE(uri, '//http', '//https') WHERE uri LIKE 'oembed://http|%3A//%' ESCAPE '|'");
  }
