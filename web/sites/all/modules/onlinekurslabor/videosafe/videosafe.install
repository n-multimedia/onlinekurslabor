<?php

/**
 * erstelle initial root-Ordner fuer videosafe
 */
function videosafe_update_1000() {
    global $user;

    $node = new stdClass();
    $node->title = "Videosafe";
    $node->type = NM_VIDEOSAFE_FOLDER;
    node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
    $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
    $node->uid = $user->uid;
    $node->status = 1; //(1 or 0): published or not
    #$node->body = 'In diesem Bereich werden Videos hinterlegt. Diese sind dann geschützt und ein Download wird unterbunden';
    $node->promote = 0; //(1 or 0): promoted to front page
    $node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write

    $node = node_submit($node); // Prepare node for saving
    node_save($node);
}

/**
 * erstelle Ordner fuer alte H5Ps
 */
function videosafe_update_1001() {
    global $user;
     
    $first = _videosafe_get_root_directory();

    $node = new stdClass();
    $node->title = "Migrierte Altdateien";
    $node->type = NM_VIDEOSAFE_FOLDER;
    node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
    $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
    $node->uid = $user->uid;
    $node->status = 1; //(1 or 0): published or not
    $node->field_parent_folder[LANGUAGE_NONE][0]['target_id'] = $first->nid;
    #$node->body = 'In diesem Bereich werden Videos hinterlegt. Diese sind dann geschützt und ein Download wird unterbunden';
    $node->promote = 0; //(1 or 0): promoted to front page
    $node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write

    $node = node_submit($node); // Prepare node for saving
    node_save($node);
}

/**
 * migriere alt-h5p-files in videosafe
 */
function videosafe_update_1002() {
    global $user;
    $folders = _videosafe_get_all_folders();
    $last = end($folders);

     
 $file_sql = db_select('file_managed', 'n')
            ->fields('n', array('fid'))
            ->condition('n.uri', '%/videos/files-%', 'LIKE')
            ->execute()
            ->fetchCol(); // returns an unindexed array
    $files = file_load_multiple($file_sql);
    foreach ($files as $fid => $file) {
        $treffer = array();
#$file = file_load(591);
        preg_match('/files-.+/', $file->uri, $treffer);
        $pure_filename = $treffer[0];

#dpm($file->filename ."  |  ". $pure_filename);
        $file->filename = $pure_filename;
        $new_path = "private://videosafe/" . $pure_filename;
#dpm($file->uri ."  |  ".$new_path);
        $file->uri = $new_path;
        file_save($file);

        $filename = $file->filename;
        $file->display = 1;
        $exported_file_array = (get_object_vars($file));
        $exported_file_array['field_video_display'] = 1;

        $node = new stdClass();
        $node->title = str_replace('videos/', '', $filename);
        $node->type = NM_VIDEOSAFE_VIDEO;
        node_object_prepare($node); // Sets some defaults. Invokes hook_prepare() and hook_node_prepare().
        $node->language = LANGUAGE_NONE; // Or e.g. 'en' if locale is enabled
        $node->uid = $user->uid; 
        $node->status = 1; //(1 or 0): published or not
        #$node->body = 'In diesem Bereich werden Videos hinterlegt. Diese sind dann geschützt und ein Download wird unterbunden';
        $node->promote = 0; //(1 or 0): promoted to front page
        $node->comment = 0; // 0 = comments disabled, 1 = read only, 2 = read/write
         $node->field_parent_folder[LANGUAGE_NONE][0]['target_id'] = $last->nid;
        $node->field_video[LANGUAGE_NONE][] = $exported_file_array;
        $node = node_submit($node); // Prepare node for saving
        node_save($node);
    }
}
