<?php

function support_form_block_info() {
  $blocks = array();

  $blocks['support_form'] = array(
    'info' => t('Support - Form'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function support_form_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'support_form' :
      $block['content'] = array(
        "prefix" => array("#markup" => _support_form_get_rendered_help_button(t("Support request")) . _support_form_popup_render_prefix()),
        "form" => drupal_get_form("support_formular"),
        "suffix" => array("#markup" => _support_form_popup_render_suffix()),
      );
      break;
  }

  return $block;
}

/**
 * Returns the categories, which the user can choose from
 *
 * @return  Array(String) of options
 */
function _support_form_get_options() {
  return array(
    'Allgemein',
    'Kurs',
    'Kursinhalte',
    'Stream',
    'Nachrichten',
    'Profil',
    'Export dieses Lehrtexts anfordern',
    'Sonstiges'
  );
}

/**
 * Implements hook_page_build().
 */
function support_form_page_build(&$page) {
  drupal_add_css(drupal_get_path('module', 'support_form') . '/css/support_form.css');
}

/**
 * Creates the supportz-form and returns it
 *
 * @return Support-form
 */
function support_formular($form, &$form_state) {
  /* $form = array();
    $form["#markup"] = "käsekuchen";
    return $form ;
   */
  global $user;
  $form = array();
  if (!$user->uid) {
    $form["error"] = array("#markup" => "You are not logged in");
    //just dummy. The button should not appear.
    return $form;
  }
  $current_site = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
  $user_agent = $_SERVER['HTTP_USER_AGENT'];
  $disclaimer = "\n\nDiese Informationen dienen der gezielten Fehlerbehebung.";


  $options = _support_form_get_options();

  $form["wrapper_div_start"] = array(
    "#markup" => '<div id="kontakt-div">'
  );

  $form["wrapper_modal_body_start"] = array(
    "#markup" => '<div class="modal-body">'
  );
  $form["kontakt"] = array();
  $form['kontakt']['category'] = array(
    '#type' => 'select',
    '#title' => 'Kategorie',
    '#options' => $options
  );
  $form["kontakt"]["problem"] = array(
    '#type' => 'textarea',
    '#title' => 'Ihre Anfrage',
    '#required' => TRUE,
    '#attributes' => array(
      'class' => array('form-control'),
      'placeholder' => 'Die Problembeschreibung',
      'rows' => '5'
    ),
  );
  $form['kontakt']['personal_data'] = array(
    '#type' => 'fieldset',
    '#title' => t('<small>Diese Informationen werden zusätzlich an unser Supportteam gesendet</small>'),
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['kontakt']['personal_data']['data'] = array(
    '#type' => 'textarea',
    '#value' => 'Kontoname: ' . $user->name . "\n" . 'E-Mail: ' . $user->mail . "\n" . 'Aktueller Pfad: ' . $current_site . "\n" . 'Browser: ' . $user_agent . $disclaimer,
    '#attributes' => array(
      'class' => array('form-control disabled'),
      'disabled' => TRUE,
      'rows' => 7
    ),
  );
  ;

  $form["wrapper_modal_body_end"] = array(
    "#markup" => '</div>'
  );

  $form["wrapper_modal_footer_start"] = array(
    "#markup" => '<div class="modal-footer">'
  );
  $form["buttons"] = array();
  $form["buttons"]['support_confirm'] = array(
    '#type' => 'submit',
    '#value' => t('Send'),
    '#attributes' => array(
      'class' => array('btn', 'btn-warning'),
    ),
    '#ajax' => array(
      'callback' => 'support_formular_ajax_handler',
      'wrapper' => 'kontakt-div',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );
  $form["buttons"]['support_close'] = _support_form_get_form_element_button_close(t("Cancel"));

  $form["wrapper_modal_footer_end"] = array(
    "#markup" => '</div>'
  );



  $form["wrapper_div_end"] = array(
    "#markup" => '</div>'
  );
  return $form;
}

/**
 * this function will be triggered when "send" is klicked in the ajax-form
 * nothing to do here, see https://drupal.stackexchange.com/questions/12289/how-to-validate-and-submit-a-form-using-ajax by OWast
 * @return Form with highlighted point of failure or a success message
 */
function support_formular_ajax_handler(&$form, &$form_state) {
  return $form;
}

/**
 * validate ajax form
 * @param type $form
 * @param type $form_state
 */
function support_formular_validate(&$form, &$form_state) {
  // Validation logic - invalidate using form_set_error() or form_error()
  //nothing to validate - "required" is checked by drupal
}

/**
 * // Submit logic - runs when validation is ok
  // You can alter the form here to be just a markup field if you want.
 * Takes form-data and generates a support-mail and sends it
 *
 * If no user-message is given, an error will show up
 *
 * @param $form         form-object
 * @param &$form_state  information on form-processing
 */
function support_formular_submit(&$form, &$form_state) {
  global $user;
  $options = _support_form_get_options();
  // Always set content-type when sending HTML email
  $headers = "MIME-Version: 1.0" . "\r\n";
  $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
  $params = array();
  $module = 'support_form';
  $key = 'support_mail';
  $language = language_default();

  $params['@to'] = variable_get('okl_support_email', NM_SUPPORT_EMAIL);
  $params['@subject'] = "Problem bei: " . $options[$form_state['values']['category']];
  $params['@body'] = wordwrap("Art der Anfrage: "
    . $options[$form_state['values']['category']] . "\n" . "<hr>\n Nachricht:\n\n<p>" .
    $form_state['values']['problem'] . "</p><hr>\nDebuginfos: \n" . $form_state['values']['data'], 70);
  $params['@headers'] = $headers . "From: " . $user->mail;
  $params['@from'] = $user->mail;
  $mailsuccess = drupal_mail($module, $key, $params['@to'], $language, $params, $params['@from']);

  if ($mailsuccess) {
    drupal_set_message("Ihre Nachricht wurde versendet.", "status");
    $form['kontakt'] = array("#markup" => "Sie erhalten in Kürze eine Bestätigungs-E-Mail.");

    unset($form["buttons"]['support_confirm']);
    $form["buttons"]['support_close'] = _support_form_get_form_element_button_close(t("Close"), "btn-primary");
  }
  else {
    drupal_set_message("Fehler beim versenden Ihrer Anfrage. Bitte versuchen Sie es später erneut.", "error");
  }
}

/**
 * Returns the prefix for the modal-popup
 *
 * @return Prefix for modal-popup
 */
function _support_form_popup_render_prefix() {
  //3 divs gehen auf
  return '
      <div class="modal fade" id="supportModal" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">Wie können wir helfen?</h4>
        </div>';
}

/**
 * Returns the suffix for the modal-popup
 *
 * @return String Suffix for modal-popup
 */
function _support_form_popup_render_suffix() {//die 3 divs, die am anfang aufgehen
  return'</div>
    </div></div>';
}

/**
 * Render HTML-button for the form
 * @param String $label Label of the button
 * @return HTML-code for the Button
 */
function _support_form_get_rendered_help_button($label) {
  return '<button type="button"  class="btn btn-warning btn-lg hidden-xs" id="support_form_btn" href="#supportModal" data-toggle="modal">' . $label . '</button>';
}

/**
 * liefert den schließen-/abbrechen-button als drupal7-form-element
 * @param String $close_button_text (cancel, close etc)
 * @param String $close_button_class (btn-default, btn-primaray etc)
 * @return array $formelement
 */
function _support_form_get_form_element_button_close($close_button_text = "schließen", $close_button_class = "btn-default") {

  return
    array(
      '#type' => 'button',
      '#value' => $close_button_text,
      '#attributes' => array(
        'class' => array('btn', $close_button_class),
        "data-dismiss" => "modal"
  ));
}
