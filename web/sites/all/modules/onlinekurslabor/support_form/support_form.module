<?php

/**
 * Initializes the site-options and callback
 *
 * @return Array containing module-information
 */
function support_form_menu() {
  $items = array();
  $items['support_help'] = array(
    'title' => 'Support',
    'description' => 'Wir helfen gerne',
    'page callback' => 'support_form_page_callback',
    'access callback' => TRUE,
    'type' => MENU_NORMAL_ITEM
  );
  return $items;
}


/**
 * Returns the categories, which the user can choose from
 *
 * @return  Array(String) of options
 */
function _support_form_get_options() {
  return array(
    'Allgemein',
    'Kurs',
    'Kursinhalte',
    'Stream',
    'Nachrichten',
    'Profil',
    'Export dieses Lehrtexts anfordern',
    'Sonstiges'
  );

}

/**
 * this function will be triggered when "send" is klicked in the ajax-form
 *
 * @return Form with highlighted point of failure or a success message
 */
function support_form_callback($form, &$form_state) {
    if (form_get_errors()) {
        return $form;
    }
    $element = array();
    $element['info']['bodystart'] = _support_form_modalhelper_get_block_body_start();
    $element['info']['message'] = array(
        '#type' => 'markup',
        '#markup' => '<div class="alert alert-success"><h4><span class="glyphicon glyphicon-ok" aria-hidden="true"></span> Ihre Nachricht wurde versendet</h4></div><p>Sie erhalten in Kürze eine Bestätigungs-E-Mail.</p>'
        );
    $element['info']['bodysend'] = _support_form_modalhelper_get_block_body_end();
    $element['info']['end'] = array(
        '#type' => 'markup',
        '#prefix' => _support_form_modalhelper_get_rendered_footer_start(),
        '#suffix' => _support_form_modalhelper_get_rendered_footer_end('schließen','btn-primary'),
    );
    
    return $element;
}

/**
 * Implements hook_block_info().
 */

function support_form_block_info() {
  $blocks = array();

  $blocks['support_form'] = array(
    'info' => t('Support - Form'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function support_form_block_view($delta = '') {
  $block = array();

  switch ($delta) {
    case 'support_form' :
      $block['content'] = support_form_render();
      break;

  }

  return $block;


}

/**
 * returns the rendered form
 *
 * @return Support-Form
 */
function support_form_page_callback() {
  return support_form_render();
}
    

/**
 * Implements hook_page_build().
 */
function support_form_page_build(&$page) {

    if (isset($page['footer_region_left'])) {
        $block = module_invoke('support_form', 'block_view', 'support_form');
        $blocks = array('#markup' => $block['content']);
        $page['footer_region_left']['support_form'] = $blocks;
    }
}

/**
 * Creates the supportz-form and returns it
 *
 * @return Support-form
 */
function support_form() {
  global $user;
  $current_site = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];
  $user_agent = $_SERVER['HTTP_USER_AGENT'];
  $disclaimer = "\n\nDiese Informationen dienen der gezielten Fehlerbehebung.";
  $form = array();
    
  $options = _support_form_get_options();
    
  $form['kontakt']=array(
    '#type' => 'fieldset',
    '#prefix' => '<div id="kontakt-div">',
    '#suffix' => '</div>' 
  );
  $form['kontakt']['body_start'] = _support_form_modalhelper_get_block_body_start();
   $form['kontakt']['category'] = array(
    '#type' => 'select',
    '#title' => 'Kategorie',
    '#options' => $options
  );
   $form['kontakt']['problem'] = array(
    '#type' => 'textarea',
    '#title' => 'Ihre Anfrage',
    '#required' => TRUE,
       
    '#attributes' => array(
      'class' => array('form-control'),
      'placeholder' => 'Die Problembeschreibung',
      'rows' => '5'
    ),
  );
    $form['kontakt']['personal_data'] = array(
    '#type' => 'fieldset',
    '#title' => t('<small>Diese Informationen werden zusätzlich an unser Supportteam gesendet</small>'),
    '#prefix' => '<div id="daten-div">',
    '#suffix' => '</div>',
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );

  $form['kontakt']['personal_data']['data'] = array(
    '#type' => 'textarea',
    '#value' => 'Kontoname: '.$user->name . "\n".'E-Mail: ' . $user->mail . "\n".'Aktueller Pfad: '.  $current_site . "\n".'Browser: ' . $user_agent . $disclaimer,
    '#attributes' => array(
      'class' => array('form-control disabled'),
      'disabled' => TRUE,
      'rows' => 7
    ),
  );
; 

$form['kontakt']['body_end'] = _support_form_modalhelper_get_block_body_end();
 $form['kontakt']['submit'] = array(
    '#type' => 'submit',
    '#prefix' =>  _support_form_modalhelper_get_rendered_footer_start(),
    '#suffix' => _support_form_modalhelper_get_rendered_footer_end('Abbrechen'),
    '#value' => 'Senden',
    '#attributes' => array(
      'class' => array('btn','btn-warning'),
    ),
    '#ajax' => array(
      'callback' => 'support_form_callback',
      'wrapper' => 'support-form',
      'method' => 'replace',
      'effect' => 'fade',
    ),
  );
 
    
   return $form;
   
    
}

/**
 * Takes form-data and generates a support-mail and sends it
 *
 * If no user-message is given, an error will show up
 *
 * @param $form         form-object
 * @param &$form_state  information on form-processing
 */
function support_form_submit($form, &$form_state) {
  // Always set content-type when sending HTML email
  $headers = "MIME-Version: 1.0" . "\r\n";
  $headers .= "Content-type:text/html;charset=UTF-8" . "\r\n";
  $params = array();
  $module = 'support_form';
  $key = 'support_mail';
  $language = language_default();
    
  if ($form_state['values']['problem'] != "") {
    global $user;
    $options = _support_form_get_options();
    $params['@to'] = variable_get('okl_support_email', NM_SUPPORT_EMAIL);
    $params['@subject'] = "Problem bei: " . $options[$form_state['values']['category']];
    $params['@body'] = wordwrap("Art der Anfrage: " 
            . $options[$form_state['values']['category']]."\n". "<hr>\n Nachricht:\n\n<p>" .
            $form_state['values']['problem'] . "</p><hr>\nDebuginfos: \n" .$form_state['values']['data'], 70);
    $params['@headers'] = $headers . "From: " . $user->mail;
    $params['@from'] = $user->mail;
    drupal_mail($module, $key, $params['@to'], $language, $params);
  }
}

/**
 * Builds TEXT-msg from given HTML-msg and sends it
 *
 * @param $key      needed for the mail_hook
 * @param $message  array containing message information
 * @param $params   array containing form information
 */
function support_form_mail($key, &$message, $params) {

  $from = $params['@from'];
  $message['subject'] = t($params['@subject']);
  $message['body'] = t(drupal_html_to_text($params['@body']));
  $message['slogan'] = "Support-Anfrage";
  $message['from'] = $from;
  $message['headers']['From'] = $from;

}

/**
 * renders form and modal-divs
 * @return string
 */
function support_form_render() {
  global $user;

  //just for authenticated users
  if($user->uid > 0){
    drupal_add_css(drupal_get_path('module', 'support_form') .'/css/support_form.css');

    $form = drupal_get_form("support_form");
    $output = drupal_render($form);
   
    return (_support_form_popup_render_prefix() . "" . $output . "" . _support_form_popup_render_suffix()) . _support_form_render_support_button(t("Support request"));
  }

  return "";
}

/**
 * Returns the prefix for the modal-popup
 *
 * @return Prefix for modal-popup
 */
function _support_form_popup_render_prefix() {
    //3 divs gehen auf
  return '
      <div class="modal fade" id="supportModal" role="dialog">
    <div class="modal-dialog">
    
      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h4 class="modal-title">Wie können wir helfen?</h4>
        </div>';
}

/**
 * Returns the suffix for the modal-popup
 *
 * @return String Suffix for modal-popup
 */
function _support_form_popup_render_suffix() {//die 3 divs, die am anfang aufgehen
  return'</div>
    </div></div>';
}

    
    
/**
 * Render HTML-button for the form
 * @param String $label Label of the button
 * @return HTML-code for the Button
 */
function _support_form_render_support_button($label) {
  return '<button type="button"  class="btn btn-warning btn-lg hidden-xs" id="support_form_btn" href="#supportModal" data-toggle="modal">' . $label . '</button>';
}

/**
 * must be added to  a form after _support_form_modalhelper_get_block_body_start was added
 * @return array renderable block 
 */
function _support_form_modalhelper_get_block_body_end()
{
    return array(
    '#type'=>'markup',
    '#markup'=>'</div>'
);
}

/**
 * Add this to a form to start the modal body
 * @return array renderable block 
 */
function _support_form_modalhelper_get_block_body_start() {
    return array(
        '#type' => 'markup',
        '#markup' => '<div class="modal-body">'
    );
}

/**
 * use this as a #prefix in any form
 * @return string footer_start
 */
function _support_form_modalhelper_get_rendered_footer_start() {

    return '<div class="modal-footer">';
}

/**
 * use this as a #suffix in a form. It will add a closebutton as well
 * @param type $close_button_text
 * @return string rendered footer end
 */
function _support_form_modalhelper_get_rendered_footer_end($close_button_text = "schließen", $close_button_class="btn-default") {

    return '<button type="button" class="btn '.$close_button_class.'" data-dismiss="modal">' . $close_button_text . '</button></div>';
}
